# -*- coding: utf-8 -*-
"""chennai houseprice .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16oMBslp-1HLkeXJtCUG-jYNuhcFZzr-K
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data = pd.read_csv('/content/train-chennai-sale.csv')

"""# New Section"""

data.shape

data.head()

data = data.drop(columns = ['PRT_ID'])

data.columns

data.AREA.values

data.AREA.unique()

data.AREA.replace('Karapkkam', 'Karapakkm', inplace=True)
data.AREA.replace('Ann Nagar', 'Anna Nagar', inplace=True)
data.AREA.replace('Adyr', 'Adyar', inplace=True)
data.AREA.replace('Velchery', 'Velachery', inplace=True)
data.AREA.replace('Chrompt', 'Chrompet', inplace=True)
data.AREA.replace('KKNagar', 'KK Nagar', inplace=True)
data.AREA.replace('TNagar', 'T Nagar', inplace=True)
data.AREA.replace('Chormpet', 'Chrompet', inplace=True)
data.AREA.replace('Ann Nagar', 'Anna Nagar', inplace=True)

data.AREA.unique()

data.AREA.isnull().sum()

"""INT_SQFT"""

data.INT_SQFT.isnull().sum()

data.INT_SQFT.describe()

"""DATE SALE"""

data.DATE_SALE.values[0]

data.DATE_SALE.isnull().sum()

""" DATE_BUILD"""

data.DATE_BUILD.values[0]

data.DATE_BUILD.isnull().sum()

"""AGE of building"""

data.DATE_BUILD = pd.to_datetime(data.DATE_BUILD)
data.DATE_BUILD = pd.to_datetime(data.DATE_SALE)

data = data.drop(columns = ['DATE_BUILD','DATE_SALE'])

data.head()

"""DIST_ROAD"""

data.DIST_MAINROAD.describe()

data.DIST_MAINROAD.isnull().sum()

"""BEDROOM"""

data.N_BEDROOM.isnull().sum()

data = data.fillna(data["N_BEDROOM"].mode())

data.N_BEDROOM.describe()

"""N_ROOM"""

data.N_ROOM.isnull().sum()

data.N_ROOM.describe()

"""SALE_COND"""

data.SALE_COND.isnull().sum()

data.SALE_COND.unique()

{data.SALE_COND.replace('AbNormal', 'Abnormal', inplace=True), (data.SALE_COND.replace('Ab Normal', 'Abnormal', inplace=True)), (data.SALE_COND.replace('Partiall', 'Partial', inplace=True))}

data.SALE_COND.unique()

"""PARK_FACIL"""

data.PARK_FACIL.isnull().sum()

data.PARK_FACIL.unique()

data.PARK_FACIL.replace('Noo', 'No', inplace=True)

data.PARK_FACIL.unique()

"""BUILDTYPE"""

data.BUILDTYPE.isnull().sum()

data.BUILDTYPE.unique()

data.BUILDTYPE.replace('Others', 'Other', inplace=True)
data.BUILDTYPE.replace('Comercial', 'Commerical', inplace=True)

data.BUILDTYPE.unique()

data.columns

"""UTILITY_AVAIL"""

data.UTILITY_AVAIL.isnull().sum()

data.UTILITY_AVAIL.unique()

data.UTILITY_AVAIL.replace('ALlpub', 'All pub', inplace=True)

data.UTILITY_AVAIL.unique()

"""STREET"""

data.STREET.isnull().sum()

data.STREET.unique()

data.STREET.replace('NOAccess', 'No Access', inplace=True)

data.STREET.unique()

"""MZZONE"""

data.MZZONE.isnull().sum()

data.MZZONE.unique()

"""SALES_PRICE"""

data.SALES_PRICE.isnull().sum()

data.SALES_PRICE.describe()

"""QS Data

"""

data.QS_OVERALL = (data.QS_BATHROOM + data.QS_BEDROOM + data.QS_ROOMS)/3
data.head()

data.QS_OVERALL.isnull().sum()

data = data.drop(columns = ['QS_BATHROOM','QS_BEDROOM','QS_ROOMS'])



"""DATA VISALTION"""

corrmat = data.corr()
f, ax = plt.subplots(figsize=(5, 5))
sns.heatmap(corrmat, vmax=.8, square=True);

from itertools import groupby

A=data.AREA.groupby(data.AREA).count()
B=data.AREA.groupby(data.BUILDTYPE).count()
C=data.AREA.groupby(data.UTILITY_AVAIL).count()
D=data.AREA.groupby(data.STREET).count()
E=data.AREA.groupby(data.MZZONE).count()
F=data.AREA.groupby(data.PARK_FACIL).count()

sns.set_theme(style="darkgrid",palette="pastel")
plt.figure(figsize=(20,16))
plt.subplot(231)
sns.barplot(x=A.index,y=A.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (AREA WISE)')
plt.subplot(232)
sns.barplot(x=B.index,y=B.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (BUILDTYPE WISE)')
plt.subplot(233)
sns.barplot(x=C.index,y=C.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (UTILITY_AVAIL WISH)')
plt.subplot(234)
sns.barplot(x=D.index,y=D.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (STREET WISH)')
plt.subplot(235)
sns.barplot(x=E.index,y=E.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (MZZONE WISH)')
plt.subplot(236)
sns.barplot(x=F.index,y=F.values,data=data)
plt.xticks(rotation=15)
plt.title('NO. OF HOUSES (PARK_FACIL)')
plt.show()

plt.figure(figsize=(28,18))
plt.subplot(231)
sns.barplot(x=data.AREA,y=data.SALES_PRICE)
plt.title('Finding is there an order in AREA vs SALAES_PRICE')
plt.subplot(232)
sns.barplot(x=data.BUILDTYPE,y=data.SALES_PRICE)
plt.title('Finding is there an order in Build Type vs SALAES_PRICE')
plt.subplot(233)
sns.barplot(x=data.UTILITY_AVAIL,y=data.SALES_PRICE)
plt.title('Finding is there an order in Utility Avail vs SALAES_PRICE')
plt.subplot(234)
sns.barplot(x=data.STREET,y=data.SALES_PRICE)
plt.title('Finding is there an order in Street vs SALAES_PRICE')
plt.subplot(235)
sns.barplot(x=data.MZZONE,y=data.SALES_PRICE)
plt.title('Finding is there an order in MZZONE vs SALAES_PRICE')
plt.subplot(236)
sns.barplot(x=data.PARK_FACIL,y=data.SALES_PRICE)
plt.title('Finding is there an order in  Park Facility vs SALAES_PRICE')